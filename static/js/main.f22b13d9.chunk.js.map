{"version":3,"sources":["components/LoginButton.jsx","components/LogoutButton.jsx","img/def_avatar.png","components/Profile.jsx","App.js","index.js"],"names":["LoginButton","useAuth0","loginWithRedirect","isAuthenticated","onClick","LogoutButton","logout","returnTo","window","location","origin","Profile","user","image","picture","avatar","src","alt","name","width","email","data","override","css","App","useState","localStorage","getItem","setToken","isLoading","getAccessTokenSilently","useEffect","then","tok","setItem","console","log","color","loading","size","className","href","target","rel","ReactDOM","render","domain","process","clientId","redirectUri","document","getElementById"],"mappings":"+MAYeA,G,MATK,WAAO,IAAD,EACuBC,cAAvCC,EADgB,EAChBA,kBACR,OAFwB,EACGC,iBAGvB,wBAAQC,QAAS,kBAAMF,KAAvB,sBCSSG,EAbM,WAAO,IAAD,EACWJ,cAA5BK,EADiB,EACjBA,OACR,OAFyB,EACTH,iBAGZ,wBACEC,QAAS,kBAAME,EAAO,CAAEC,SAAS,GAAD,OAAKC,OAAOC,SAASC,OAArB,aADlC,sB,iBCPS,MAA0B,uCCsB1BC,EAjBC,WAAO,IAAD,EACcV,cAA1BW,EADY,EACZA,KAAMT,EADM,EACNA,gBAERU,GAAY,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAME,SAAUF,EAAKE,QAAUC,EAE7C,OACEZ,GACE,gCACE,qBAAKa,IAAKH,EAAOI,IAAG,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMM,KAAMC,MAAO,MACzC,oCAAKP,QAAL,IAAKA,OAAL,EAAKA,EAAMM,OACX,mCAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAMQ,QACV,cAAC,IAAD,CAAYC,KAAMT,Q,oJCN1B,IAAMU,EAAWC,YAAH,KA0DCC,MApDf,WAAgB,IAAD,EACQC,oBAAS,kBAC5BC,aAAaC,QAAQ,aAAeD,aAAaC,QAAQ,aAAe,MADjEC,EADI,sBAIkD3B,cAAvD4B,EAJK,EAILA,UAAW1B,EAJN,EAIMA,gBAAiB2B,EAJvB,EAIuBA,uBAgBpC,OAdAC,qBAAU,WAKJ5B,GAHK2B,IAIIE,MAAK,SAAAC,GACdL,EAASK,GACTP,aAAaQ,QAAQ,YAAaD,GAClCE,QAAQC,IAAIH,QAGf,CAAC9B,EAAiB2B,IAEjBD,EAEA,cAAC,IAAD,CACEQ,MAAK,UACLC,QAAST,EACTN,IAAKD,EACLiB,KAAM,MAMV,qCACE,+CACA,sBAAKC,UAAU,MAAf,UACE,mBACEC,KAAK,8CACLC,OAAO,SACPC,IAAI,aACJH,UAAU,OAJZ,8BAQA,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,cAAC,EAAD,QCvDNI,IAASC,OACP,cAAC,IAAD,CACEC,OALWC,4BAMXC,SALaD,mCAMbE,YAAW,UAAKzC,OAAOC,SAASC,OAArB,UAHb,SAKE,cAAC,EAAD,MAEFwC,SAASC,eAAe,W","file":"static/js/main.f22b13d9.chunk.js","sourcesContent":["import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LoginButton = () => {\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n  return (\n    !isAuthenticated && (\n      <button onClick={() => loginWithRedirect()}>Log In</button>\n    )\n  );\n};\n\nexport default LoginButton;\n","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LogoutButton = () => {\n  const { logout, isAuthenticated } = useAuth0();\n  return (\n    isAuthenticated && (\n      <button\n        onClick={() => logout({ returnTo: `${window.location.origin}/auth0` })}\n      >\n        Log Out\n      </button>\n    )\n  );\n};\n\nexport default LogoutButton;\n","export default __webpack_public_path__ + \"static/media/def_avatar.22c31152.png\";","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport JSONPretty from 'react-json-pretty';\nimport avatar from '../img/def_avatar.png';\n\nconst Profile = () => {\n  const { user, isAuthenticated } = useAuth0();\n\n  const image = user?.picture ? user.picture : avatar;\n\n  return (\n    isAuthenticated && (\n      <div>\n        <img src={image} alt={user?.name} width={250} />\n        <h2>{user?.name}</h2>\n        <p>{user?.email}</p>\n        <JSONPretty data={user} />\n      </div>\n    )\n  );\n};\n\nexport default Profile;\n","import { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { css } from '@emotion/react';\nimport './App.css';\n\nimport LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LogoutButton';\nimport Profile from './components/Profile';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction App() {\n  const [, setToken] = useState(() =>\n    localStorage.getItem('userToken') ? localStorage.getItem('userToken') : '',\n  );\n  const { isLoading, isAuthenticated, getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    const getToken = () => {\n      return getAccessTokenSilently();\n    };\n\n    if (isAuthenticated) {\n      getToken().then(tok => {\n        setToken(tok);\n        localStorage.setItem('userToken', tok);\n        console.log(tok);\n      });\n    }\n  }, [isAuthenticated, getAccessTokenSilently]);\n\n  if (isLoading) {\n    return (\n      <ClipLoader\n        color={`#ffffff`}\n        loading={isLoading}\n        css={override}\n        size={150}\n      />\n    );\n  }\n\n  return (\n    <>\n      <h1>This is App#1</h1>\n      <div className=\"box\">\n        <a\n          href=\"https://created-with-love.github.io/auth0-2\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"link\"\n        >\n          Go to the App #2\n        </a>\n        <LoginButton />\n        <LogoutButton />\n      </div>\n\n      <Profile />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={`${window.location.origin}/auth0`}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}